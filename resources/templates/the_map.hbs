{{> header }}
    <div class="container is-fluid">
      <section class="hero is-success is-fullheight">
        <div id="mapid" class="hero-body"> </div>
      </section>
    </div>
    <script>
      var mymap = L.map('mapid').setView([-1.23, 22.39], 4);
      L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoiYmJyaXR0YWluIiwiYSI6ImNqMXR1ZjN4YjAwMXUzM3AweWRsb2pwOHMifQ.3LYbdpsBdUUzjw_7e_rWvQ', {
                maxZoom: 13,
                attribution: "",
                id: 'mapbox.satellite',
      }).addTo(mymap);
      var layerGroup = L.layerGroup().addTo(mymap);

      mymap.on('dragend zoomend', eventHandler);
      function reqListener () {
        layerGroup.clearLayers();
        var geojsonFeature = JSON.parse(this.responseText);
        L.geoJSON(geojsonFeature).addTo(layerGroup);
      }
      function eventHandler(e) {
        var center = mymap.getCenter();
        var bounds = mymap.getBounds();
        var Httpreq = new XMLHttpRequest();
        var oReq = new XMLHttpRequest();
        oReq.addEventListener("load", reqListener);
        //console.log(center, center.distanceTo(bounds._northEast) / 111000);
        oReq.open("GET", "/points/" + center.lat + "/" + center.lng + "/" + center.distanceTo(bounds._northEast))
        oReq.send();
      }
      {{#each posts}}
        var m{{@index}} = new L.marker([{{lat}}, {{lng}}], {
          riseOnHover: true,
        });
        m{{@index}}.addTo(mymap).bindTooltip('{{title}}', {
          direction: 'top',
          className: 'tag is-primary is-medium',
        });
        m{{@index}}.on('click', monClick{{@index}});
        function monClick{{@index}}(e) {
          window.open('/post/{{link}}');
        }
      {{/each}}
    </script>
{{> footer}}
